apiVersion: v1
kind: ConfigMap
metadata:
  name: scripts
  namespace: container-lifecycle-hook
data:
  clustername: ""
  template.json: |-
    {
      "chat_id": "$TELEGRAM_CHAT_ID",
      "text": "$TITLE:\nCluster: $KUBERNETES_CLUSTER\nNode: $KUBERNETES_NODE\nNode IP: $KUBERNETES_NODE_IP_ADDRESS\nNamespace: $KUBERNETES_NAMESPACE\nPod: $HOSTNAME\nPod IP: $KUBERNETES_POD_IP_ADDRESS\nService Account: $KUBERNETES_SERVICE_ACCOUNT\nPublic IP: $PUBLIC_IP\nKubernetes API Version: $KUBERNETES_VERSION"
    }
  createRequests.sh: |-
    #!/bin/sh

    clusterName=$(cat /opt/scripts/clustername)
    export KUBERNETES_CLUSTER=${clusterName:-unknown}

    SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
    TOKEN=$(cat ${SERVICEACCOUNT}/token)
    CACERT=${SERVICEACCOUNT}/ca.crt
    kubernetesVersion=$(/usr/bin/http GET https://kubernetes.default.svc/version "Authorization:Bearer ${TOKEN}" --verify $CACERT | /usr/bin/jq .gitVersion -r)
    export KUBERNETES_VERSION=${kubernetesVersion:-unknown}

    publicIp=$(/usr/bin/http GET https://ifconfig.me --body)
    export PUBLIC_IP=${publicIp:-unknown}

    export TITLE="üöÄ Container Lifecycle"
    /usr/bin/envsubst < /opt/scripts/template.json > /opt/files/postStartRequest.json
    export TITLE="‚ò†Ô∏è Container Lifecycle"
    /usr/bin/envsubst < /opt/scripts/template.json > /opt/files/preStopRequest.json
  postStart.sh: |-
    #!/bin/sh
    json=/opt/files/postStartRequest.json
    n=0
    while [ "$n" -lt 10 ] && [ ! -f "$json" ]; do
        n=$(( n + 1 ))
        sleep 1
    done
    if [ -f "$json" ]; then
        http https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage < $json > /opt/files/response.log
    else
        echo "$json does not exist." > /opt/files/response.log
    fi
  preStop.sh: |-
    #!/bin/sh
    json=/opt/files/preStopRequest.json
    if [ -f "$json" ]; then
        http https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage < $json
    fi
